chapter: chpt_game_concepts
text: Game Concepts
sections:
- section: sec_concepts_general
  text: General
  snippet: |-
    These rules are compatible with cards from the game {term:android: netrunner} by Fantasy Flight Games. {term:android: netrunner} is a game about the cyber-struggle between massive Corporations and subversive hackers known as Runners.
  rules:
  - rule: rule_player_definitions
    text: |-
      The game is played between two players. One player takes the role of the Corp (Corporation) and the other takes the role of the Runner. This rules document will frequently refer to a player interchangeably with their game role.
  - rule: rule_requirements
    text: |-
      Each player needs a legal deck, an identity card for their role, and any extra cards used from outside their deck. They also need a supply of tokens as described in {ref:sec_counters_and_tokens}. The constraints that define the legality of a deck are defined in {ref:sec_deck_construction}, and the cases where cards outside the deck and identity can be used are defined in {ref:sec_extra_cards}.
  - rule: rule_game_numbers
    text: All numbers used in the game are integers. Unless otherwise stated, a given value can be positive, negative, or zero.
- section: sec_golden_rules
  text: Golden Rules
  rules:
  - rule: rule_card_precedence
    text: If the text of a card directly contradicts these rules, the text of the card takes precedence.
  - subsection: rule_cannot_precedence
    text: If a rule or ability directs something to happen, but another effect states that it cannot happen, the "cannot" ability takes precedence.
    rules:
    - rule: rule_cannot_ncigs
      text: If a "cannot" effect prohibits all of the effects of another ability, that ability cannot be triggered.
    - rule: rule_partially_cannot
      text: If a "cannot" effect prohibits only part of another ability, that ability can be triggered, but the prohibited steps of resolving that ability are not carried out.
      examples:
      - text: |-
          During a run, {card:Lockdown}'s subroutine resolves, preventing the Runner from drawing cards for the remainder of the turn. The Runner has a {card:Diesel} and a {card:Process Automation} in their grip. For the remainder of this turn, they cannot play {card:Diesel} as its entire ability is prohibited, but they can play {card:Process Automation}. Even though cards cannot be drawn through {card:Process Automation}, the Runner can play it to gain 2[c].
  - rule: rule_if_able
    text: If an instruction includes the words "if able," it can only be carried out fully or not at all. If any part of the instruction is not possible to carry out, the entire instruction is ignored.
  - rule: rule_do_as_much_as_you_can
    text: If an instruction does not include the words "if able," as much of that instruction as possible is carried out. Any parts of the instruction that are not possible to carry out are ignored.
  - rule: rule_ncigs
    text: A player can only take an action or use an ability if its effect has the potential to change the game state. This potential is assessed strictly by what the action or ability can be expected to accomplish, without regard to the consequences of paying any costs to initiate that action or ability and without regard to any other abilities that may meet their conditions in the process of initiating or resolving that action or ability.
    examples:
    - text: |-
        The Runner is playing {card:Armand "Geist" Walker} and has {card:Forger} installed. The Runner can only trash {card:Forger} and trigger {card:Geist}'s ability when they are about to take a tag (which {card:Forger} could avoid) or while they have a tag (which {card:Forger} could remove). Using {card:Forger} at any other time has no potential to change the game state.

- section: sec_symbols
  text: Symbols
  rules:
  - rule: rule_symbols
    text: Several non-English symbols appear on cards and in this rules document. This section serves as a basic guide to those symbols.
  - rule: rule_plaintext_symbols
    text: When this document is presented in a format without images, plaintext replacements are used. These replacements are listed along with the symbols themselves for reference.
  - rule: rule_symbol_credits
    text: |-
      The symbol [c] (plaintext: [c]) stands for "credit". It always appears with a {n}quantity{/n}, such as 1[c], which means "one credit," or 3[c], which means "three credits." See {ref:sec_credits} for rules about credits.
  - rule: rule_symbol_clicks
    text: |-
      The symbol [click] (plaintext: [click]) stands for "click". Multiple clicks can be represented either by multiple symbols, such as [click][click], or by a numeral and symbol, such as 2[click], both meaning "two clicks." See {ref:sec_clicks} for rules about clicks.
  - rule: rule_symbol_recurring
    text: |-
      The symbol [recurring] (plaintext: [recurring]) stands for recurring credit. It always appears with a {n}quantity{/n}, such as 1[recurring], which means "one recurring credit," or 3[recurring], which means "three recurring credits." See {ref:rule_sec_recurring} for rules about recurring credits.
  - rule: rule_symbol_link
    text: |-
      The symbol [link] (plaintext: [link]) stands for "link". It is always used with a quantity, such as 1[link], which means "1 link." See {ref:sec_link} for rules about link.
  - rule: rule_symbol_mu
    text: |-
      The symbol [MU] (plaintext: [MU]) stands for "memory" and also represents the unit used to measure memory. When used with a quantity, it should be read as "memory units". For example, 2[MU] means "2 memory units." See {ref:sec_memory} for rules about memory.
    new:
  - rule: rule_symbol_sub
    text: |-
      The symbol [sub] (plaintext: [sub]) stands for "subroutine". Each symbol marks a single subroutine on a piece of ice. See {ref:sec_subroutines} for information about subroutines.
  - rule: rule_symbol_trash
    text: |-
      The symbol [trash] (plaintext: [trash]) stands for "trash this card". It is used as a self-referential cost in card text, such as "[trash]: Draw 2 cards," which means "Trash this card to draw 2 cards." See {ref:sec_costs} for rules about costs, and {ref:sec_trashing} for rules about trashing cards.
  - rule: rule_symbol_interrupt
    text: |-
      The symbol [interrupt] (plaintext: [interrupt]) stands for "interrupt timing". It is used to designate abilities that resolve immediately before other abilities. See {ref:sec_interrupts_replacements} for rules about interrupt abilities.

- section: sec_deck_construction
  text: Deck Construction
  rules:
  - subsection: rule_identity
    text: |-
      Each player's deck is associated with a single identity card that determines the faction, minimum deck size, and influence limit of that deck. The identity card may also stipulate other variances from the standard deckbuilding rules.
    rules:
    - rule: rule_gateway_identities
      text: |-
        The identities {card:The Catalyst} and {card:The Syndicate} from the {product:System Gateway Starter Pack} are intended for use only with the decks included in that pack. They are not legal for play under the full deck construction rules.
  - rule: rule_legal_deck
    text: Each deck must meet all requirements in this section to be legal for play.
  - subsection: rule_minimum_deck_size
    text: The deck must contain at least as many cards as the minimum deck size indicated on the corresponding identity.
    rules:
    - rule: rule_outside_the_deck
      text: |-
        Identity cards, extra cards that begin the game outside the deck, and player aid cards are not part of the deck and are not counted towards the size of the deck.
    - rule: rule_maximum_deck_size
      text: There is no maximum deck size.
  - rule: rule_disallowed_cards
    text: Decks cannot contain identity cards, player aid cards, cards from the wrong side (Corp cards in a Runner deck or vice-versa), or out-of-faction cards that lack influence costs.
  - subsection: rule_influence_limit
    text: |-
      Neutral cards and cards that belong to a faction other than the corresponding identity's faction are all considered out-of-faction. The total influence cost of out-of-faction cards in the deck must not exceed the influence limit of that identity.
    rules:
    - rule: rule_influence_by_copy
      text: The total influence cost of out-of-faction cards is counted by copy and not by name.
      examples:
      - text: |-
          Including a single copy of {card:Diesel} in a non-Shaper deck adds 2 to the total influence in that deck, while including two copies of {card:Diesel} in a non-Shaper deck adds 4 to the total influence in that deck.
  - subsection: rule_agenda_points
    text: A Corp deck must contain agendas totalling a certain number of agenda points, as determined by the total number of cards in the deck.
    rules:
    - rule: rule_40_44
      text: A deck with 40 to 44 cards must contain 18 or 19 agenda points.
    - rule: rule_45_49
      text: A deck with 45 to 49 cards must contain 20 or 21 agenda points.
    - rule: rule_50_54
      text: A deck with 50 to 54 cards must contain 22 or 23 agenda points.
    - rule: rule_54+
      text: A deck with more than 54 cards must contain 22 or 23 agenda points, plus an additional 2 agenda points for every full 5 cards in the deck over 50.
      examples:
      - text: A 66 card deck requires 6 additional agenda points, since it includes 3 sets of 5 cards beyond 50. This gives a final requirement of either 28 or 29 agenda points.
  - rule: rule_maximum_copies
    text: The deck cannot contain more than 3 copies of any single card, by name. Some cards stipulate alternative copy limits in their card text.
  - rule: rule_special_tournament_rules
    text: Tournament play may impose other restrictions or requirements on the legal configurations of identities and decks. 

- section: sec_extra_cards
  text: Extra Cards
  rules:
  - rule: rule_outside_deck
    text: Some abilities allow for the use of additional cards from outside the deck.
  - subsection: rule_jinteki_biotech
    text: |-
      One Corp identity, {card:Jinteki Biotech: Life Imagined}, has the ability, "Before taking your first turn, you may switch this card with any copy of Jinteki Biotech." There are 3 versions of this identity, which have different abilities on their reverse side.
    rules:
    - rule: rule_jinteki_biotech_detail
      text: |-
        A player playing Jinteki Biotech as their identity may bring any number of copies of that identity along with their deck. After completing game setup, that player may choose any copy they own to be their active identity for the duration of the game. All other copies are placed outside the game.
  - subsection: rule_adam
    text: |-
      One Runner identity, {card:Adam: Compulsive Hacker}, has the ability, "You start the game with 3 different {subtype:directive} cards installed (these cards are not considered part of your deck)."
    rules:
    - rule: rule_adam_different_directives
      text: |-
        A player playing Adam as their identity must bring at least 3 differently named cards with the {subtype:directive} subtype along with their deck. The player may bring any number of {subtype:directive} cards over the required 3.
    - rule: rule_adam_directives_install
      text: |-
        After players reveal their identities, the player playing Adam selects exactly 3 of their provided {subtype:directive} cards. Those cards begin the game installed in the play area. All other {subtype:directives} the player brought this way remain outside the game.
    - rule: rule_adam_directives_deck
      text: |-
        A player playing Adam can also include {subtype:directive} cards in their deck. The cards chosen to be installed at the beginning of the game do not impact the deck's influence requirements or the maximum allowed number of copies of those cards.
    - rule: rule_adam_directives_during_game
      text: |-
        Once the game has begun, the cards installed this way are treated exactly as any other installed cards. Abilities that move these cards to other zones function normally, including shuffling them into the stack.
  - subsection: rule_additional_identity
    text: |-
      Two cards, {card:Rebirth} and {card:DJ Fenris}, make use of identity cards other than the one selected by the player during deck construction.
    rules:
    - rule: rule_additional_identities_pile
      text: |-
        A player may bring any number of additional Runner identity cards along with their deck. These cards are kept in a pile outside the game. The Runner may look at these cards at any time.
    - rule: rule_additional_identities_reference
      text: |-
        When an ability refers to an identity other than the Runner's current identity, it refers to the cards provided this way. If an identity card leaves the play area, it must be returned to the pile outside the game.
    - rule: rule_legal_additional_identities
      text: |-
        In a tournament, all identities brought to the game this way must be legal for players to use as their actual identity in that tournament.
    - rule: rule_additional_identity_double_sided
      text: |-
        If the Runner switches their identity with a {n}double-sided identity{/n}, it enters play with the front side faceup. If the Runner switches a {n}double-sided identity{/n} with another identity, the new identity enters play faceup regardless of the {n}previous identity's{/n} current status.

- section: sec_starting_the_game
  text: Starting the Game
  rules:
  - subsection: rule_player_roles
    text: |-
      The players decide who will play as the Corp and who will play as the Runner. Each player places an appropriate identity card for the side they are to play faceup in the play area, then supplies a corresponding deck, placing it facedown in the play area, and any appropriate extra cards.
    rules:
    - rule: rule_setup_identity
      text: Some identity cards have abilities that affect setup. Even though cards are not active until the game begins, these identities still alter setup at the appropriate step as indicated by their text.
    - rule: rule_double_sided_identity
      text: Some identities are double-sided (see {ref:sec_identities}). If a player is playing a double-sided identity, it begins the game with the front side faceup.
  - rule: rule_setup_abilities
    text: |-
      If a player's identity has an ability that affects setup or the start of the game, and that ability does not directly correspond to a setup step outlined in this section of the rules, that player makes any necessary decisions and changes for their identity's special setup or start of game abilities at this time. If both players have setup or start of game abilities at this time, the Corp resolves theirs first.
  - rule: rule_start_tokens
    text: |-
      The players create the bank by gathering all types of tokens described in {ref:sec_counters_and_tokens}.
  - rule: rule_start_credits
    text: Each player takes five credits from the bank, placing the credits in their credit pool.
  - rule: rule_start_shuffle
    text: Each player shuffles their deck.
  - subsection: rule_start_hand
    text: Each player draws 5 cards from the top of their deck to form their starting hand.
    rules:
    - rule: rule_mulligan
      text: After drawing starting hands, the Corp may choose to take a mulligan; then, the Runner may choose to take a mulligan. To take a mulligan, the player shuffles their starting hand back into their deck, then draws a new starting hand. They must keep the second hand as their starting hand.
  - subsection: rule_start_corp_turn
    text: The game begins and the Corp takes their first turn.
    rules:
    - rule: rule_before_first_turn
      text: If the Corp's identity has an ability with instructions for "before taking your first turn," the Corp resolves that ability immediately before taking their first turn, and thus before the game starts.

- section: sec_ending_the_game
  text: Ending the Game
  rules:
  - subsection: rule_game_end
    text: The game ends when a player meets one of their win conditions.
    rules:
    - rule: rule_simultaneous_win
      text: If both players would simultaneously satisfy their win conditions, the game ends in a draw.
  - subsection: rule_win_conditions
    text: Each player has two possible win conditions available.
    rules:
    - rule: rule_win_agenda_points
      text: |-
        Either player can win by collecting agenda points in their score area (usually done by scoring or stealing agendas; see {ref:sec_score_scoring_steal}). A player with a score of 7 or more wins the game.
    - rule: rule_flatline
      text: |-
        The Corp wins if the Runner is {term:flatlined}. The Runner is flatlined immediately if they suffer more damage than they have cards in their grip. {n}See {ref:sec_damage} for information about damage.{/n} The Runner is also flatlined if, at the beginning of their discard {n}step{/n}, their maximum hand size is less than 0. {n}See {ref:sec_discard_phase} for information about maximum hand size and the discard step.{/n}
    - rule: rule_empty_rnd
      text: |-
        The Runner wins if the Corp is required to draw a card from R&D but cannot because R&D is empty.

- section: sec_cards
  text: Cards
  rules:
  - rule: rule_corp_card_types
    text: |-
      There are six types of Corp cards: agendas, assets, ice, identities, operations, and upgrades. All cards except the identity card are shuffled into the Corp's deck at the beginning of the game.
  - rule: rule_runner_card_types
    text: |-
      There are five types of Runner cards: events, hardware, identities, programs, and resources. All cards except the identity card are shuffled into the Runner's deck at the beginning of the game.
  - subsection: rule_active_cards
    text: Cards that are {term:active} are able to affect the game through their abilities.
    rules:
    - rule: rule_default_active_card_locations
      text: |-
        Runner cards that are installed and faceup in the play area, Corp cards that are installed and rezzed, events and operations in the play area, agendas in the Corp's score area, and both players' identities are active.
    - rule: rule_runner_become_active
      text: |-
        Unless otherwise stated, Runner cards become active as part of the process of playing or installing them.
    - rule: rule_corp_become_active
      text: |-
        Unless otherwise stated, Corp cards other than operations are installed unrezzed, and thus inactive, into the play area. Assets, ice, and upgrades become active when they are rezzed; agendas become active when they are scored. Operations become active as part of the process of playing them.
    - rule: rule_identity_become_active
      text: |-
        Identity cards become active when the game begins.
  - subsection: rule_inactive_cards
    text: Cards that are {term:inactive} are unable to affect the game or have most of their abilities used.
    rules:
    - rule: rule_default_inactive_card_locations
      text: |-
        Cards are inactive in R&D, HQ, Archives, the heap, the grip, the stack, the Runner's score area, while set aside, and while removed from the game. Facedown cards in the play area are also inactive.
    - rule: rule_inactive_cards_characteristics
      text: |-
        Inactive cards in most zones retain their printed characteristics (name, card type, faction, cost, subtypes, influence, etc). Facedown installed Runner cards have no characteristics.
  - rule: rule_card_draw
    text: |-
      For a player to {term:draw} 1 or more cards is to take that many cards from the top of their deck and put them into their hand. {ref:Sec_drawing_cards} provides more details about drawing cards.
  - rule: rule_inactive_ability_exception_link
    text: |-
      Most abilities are active if and only if the card they appear on is active. {ref:Rule_ability_active_inactive_source_card} details the cases where abilities on inactive cards are still active.
  - rule: rule_card_conversion
    text: |-
      Abilities can convert cards from one type into another type, or even from a card into a counter. {ref:Rule_add_card_to_score_area,rule_card_to_counter} explain the details of card conversion.

- section: sec_counters_and_tokens
  text: Counters and Tokens
  rules:
  - subsection: rule_counters_cards
    text: |-
      {term:Counters} and {term:tokens} are game pieces (or equivalent) that track various resources, effects, and statuses of players and their cards.
    rules:
    - rule: rule_counter_token
      text: The terms "counter" and "token" are interchangeable.
  - subsection: rule_bank
    text: |-
      The {term:bank} is the supply of counters not yet in play. Counters in the bank are available to both players to take and use as dictated by the game rules and card abilities. Players do not control counters in the bank and cannot spend them. The bank is an unlimited supply; running out of game pieces to track a type of counter does not prohibit a player from gaining counters of that type or placing them on cards.
    rules:
    - rule: rule_bank_default
      text: If an instruction directs players to place counters on a card without designating where those counters come from, take those counters from the bank.
    - rule: rule_counters_placed_condition
      text: A condition or restriction that looks for counters being placed on a card can be met by either counters from the bank or counters moved from another location.
  - rule: rule_card_conversion_game_piece
    text: |-
      Some abilities can convert a card into a counter. A counter put into play in this way is tracked with the card acting as a game piece. See {ref:rule_card_to_counter}.
  - rule: rule_additional_counters
    text: |-
      Some abilities can cause a player or card to have or be "considered to have" 1 or more counters or additional counters without placing or giving those counters. A counter considered to exist in this way conveys all the same information and effects as a counter of the specified type would, except that it cannot be moved or removed from the card or player it belongs to, nor can it be spent to pay a cost.
  - subsection: rule_counter_types
    text: |-
      There are ten types of counters: credit counters, click counters, tag counters, bad publicity counters, core damage counters, advancement counters, virus counters, power counters, agenda counters, and condition counters.
    rules:
    - rule: rule_type_credit_counter
      text: |-
        {term:Credit counters} are used to track the number of credits each player has in their credit pool; they can also be placed on cards. Rules for credits, the credit pool, and other related concepts are in {ref:sec_credits}.
    - rule: rule_type_click_counter
      text: |-
        {term:Click counters} are a gameplay aid used to track the clicks the active player has spent or has left to spend during their turn. Rules for clicks are in {ref:sec_clicks}.
    - rule: rule_type_tag_counter
      text: |-
        {term:Tag counters} are used to represent tags on the Runner. Rules for tags are given in {ref:sec_tags}.
    - rule: rule_type_bad_pub_counter
      text: |-
        {term:Bad publicity counters} represent bad publicity the Corp has earned. Rules for bad publicity are in {ref:sec_bad_publicity}.
    - rule: rule_type_core_damage_counter
      text: |-
        {term:Core damage counters} are a gameplay aid used to track core damage the Runner has suffered. Each point of core damage the Runner suffers forces them to take a core damage counter. See {ref:sec_damage}.
    - rule: rule_type_advancement_counter
      text: |-
        {term:Advancement counters} are a counter used primarily on installed agendas to track the Corp's progress toward being able to score them.
    - rule: rule_type_virus_counter
      text: |-
        {term:Virus counters} are a generic counter, used primarily by {subtype:virus} programs, that can be removed by the Corp purging them. See {ref:rule_purge}.
    - rule: rule_type_power_counter
      text: |-
        {term:Power counters} are a generic counter used by a variety of cards. They have no special rules.
    - rule: rule_type_agenda_counter
      text: |-
        {term:Agenda counters} are a generic counter used primarily on scored agendas. They have no special rules.
    - rule: rule_type_condition_counter
      text: |-
        {term:Condition counters} are counters that have rules text. Their abilities are active as long as they are hosted on a card.

- section: sec_credits
  text: Credits
  snippet: |
    Each of the Runner's credits represents enough money to upgrade some basic parts for their console, have a meal at a decent restaurant, or buy a ticket and some concessions for a night at the sensies.
    Each of the Corp's credits represents enough money to manufacture a run of computer parts, buy out a decent restaurant, or film a low-budget sensie.
  rules:
  - rule: rule_credit
    text: |-
      A {term:credit} ([c]) is the basic unit of currency. Players spend their credits to pay for various costs, card abilities, traces, etc. Credit counters most commonly represent 1[c] each, but can represent larger denominations if clearly marked.
  - rule: rule_credit_pool
    text: |-
      Each player has a {term:credit pool} where they keep a supply of credit counters matching the credits they have available to spend. The number of credits in a player's credit pool is open information.
  - subsection: rule_gain_spend_lose_credits
    text: Credits enter and leave a player's credit pool as that player gains, loses, or spends credits.
    rules:
    - rule: rule_gain_credits
      text: A player {term:gains} credits whenever credits enter their credit pool from any location. 
    - rule: rule_lose_credits
      text: If a player is required to {term:lose} credits, that player is forced to move the specified number of credits from their credit pool to the bank. Players cannot lose credits from cards.
      examples:
      - text: |-
          If a subroutine on {card:DNA Tracker} resolves, the Runner must lose 2[c] from their credit pool, or 1[c] if that is all they have. If the Runner's credit pool is empty, the effect does nothing.
    - rule: rule_spend_credits
      text: To {term:spend} or {term:pay} credits, a player puts the specified number of credits back into the bank. By default, the credits must come from the player's credit pool. Abilities can also allow players to spend credits hosted on their cards under certain conditions. If any such abilities apply, the player chooses how to divide the credits they are spending from among the allowed locations. The terms "spend" and "pay" are synonymous.
      examples:
      - text: The Runner may use the credit from {card:Cyberfeeder} to pay for {card:Atman}'s first ability.
      - text: The Runner may use credits from {card:Ghost Runner} when secretly spending credits to resolve a Psi ability (such as {card:The Future Perfect}).
      - text: The Runner must use credits from {card:Ghost Runner} if this is the only way for them to pay 3[c] when resolving the "when encountered" ability on {card:Tollbooth}.
  - subsection: rule_hosted_credits
    text: Abilities can place credits on cards, as discussed in {ref:sec_host}. Credits on a player's card are not in that player's credit pool; the player can only interact with those credits as instructed by card abilities.
    rules:
    - rule: rule_take_credits
      text: If a player is instructed to {term:take} credits from a card, they remove that many credits from that card and gain those credits.
    - rule: rule_spend_hosted_credits
      text: If an ability specifies how a player is allowed to spend credits from a card, they can be spent from that card as if they were in the player's credit pool for the specified actions or abilities.
    - rule: rule_spend_hosted_credits_during
      text: If an ability specifies a time period during which a player is allowed to spend credits from a card, they can be spent from that card as if they were in the player's credit pool for any purpose (other than losing credits) as long as the specified time period is active or the specified duration has not expired.
    - rule: rule_hosted_credits_use
      text: Spending credits from a card is considered "using" the card that allowed those credits to be spent. See {ref:rule_using}.
  - subsection: rule_sec_recurring
    toc:
    text: Recurring Credits
    rules:
    - rule: rule_recurring_credits
      text: |-
        {term:Recurring Credits} ([recurring]) place credits on a card repeatedly. The text "N[recurring]" means "When this card becomes active, place N credits on it. Before abilities meet their trigger conditions for your turn beginning, if there are fewer than N credits on this card, place credits on it until there are N credits on it."
    - rule: rule_placing_recurring_credits
      text: |-
        Recurring credits are first placed on a card as soon as it becomes active. This occurs at {ref:rule_steps_installing_become_installed} of installing the card if it is installed active, {ref:rule_steps_playing_active} of playing an event or operation, or as soon as the card is turned faceup or scored, as applicable.
    - rule: rule_refill_recurring_credits
      text: |-
        Recurring credits are refilled during {ref:step_corp_turn_recurring_credits_refill} of the Corp's turn and {ref:step_runner_turn_recurring_credits_refill} of the Runner's turn, before other abilities that apply at the start of the turn resolve.
    - rule: rule_recurring_credits_do_not_accumulate
      text: |-
        Recurring credits do not accumulate. They are refilled only up to the indicated number.
      examples:
      - text: The Runner installs {card:Spinal Modem}, which has 2[recurring]. 2 credits are placed on {card:Spinal Modem} now. The Runner spends 1 of those credits later in their turn. At the beginning of the Runner's next turn, the credits on {card:Spinal Modem} should be replenished up to 2[c], so 1 more credit is placed on it.

- section: sec_clicks
  text: Clicks
  snippet: |
    Working a job, making connections, and especially jacking in—everything you do takes time, and it always goes by faster than you think. A click represents an abstract amount of time spent on a particular activity, either several hours all at once or scattered across the day.
  rules:
  - rule: rule_click
    text: A {term:click} ([click]) is the basic unit of activity. Players spend their clicks to perform actions and trigger abilities. Each click counter represents 1 click.
  - subsection: rule_allotted_clicks
    text: As the first step of a player's turn, they gain an allotted number of clicks to spend during the action phase of that turn. See {ref:chpt_turns} for details about the procedures of player turns.
    rules:
    - rule: rule_corp_allotted_clicks
      text: The Corp receives 3[click] on each of their turns.
    - rule: rule_runner_allotted_clicks
      text: The Runner receives 4[click] on each of their turns.
  - subsection: rule_gain_spend_lose_clicks
    text: Players can gain, lose, or spend clicks.
    rules:
    - rule: rule_gain_clicks
      text: A player {term:gains} clicks whenever the number of clicks they have is increased.
    - rule: rule_lose_spend_clicks
      text: If a player {term:loses} or {term:spends} clicks, the number of clicks they have is reduced by that amount. The terms "lose" and "spend" are not synonymous for the purposes of meeting conditions and restrictions of card abilities.
    - rule: rule_click_actions
      text: Paid abilities that begin with [click] are actions and have special timing rules (see {ref:sec_actions}). Aside from taking actions, there are no special restrictions to how or when a player can spend their clicks during their turn.
  - rule: rule_priority_subtype
    text: Some cards have the subtype {subtype:priority} and the text, "Play only as your first [click]." A player can only play a {subtype:priority} card using the basic action to play an event or operation, and only if they have not spent any other clicks that turn. Losing clicks does not affect a player's ability to play a {subtype:priority} card.

- section: sec_objects
  text: Objects
  rules:
  - rule: rule_object
    text: An {term:object} is an occurrence of a card or counter existing in a particular zone. When a card or counter moves from one zone to another, it becomes a new object.
  - subsection: rule_no_memory
    text: Restrictions and effects on a card or counter only apply for as long as that card or counter remains the same object. Cards and counters have no memory of the objects they were in the past.
    examples:
    - text: The Corp uses the first ability on {card:Vaporframe Fabricator}, which specifies that it can only be used once per turn, and trashes {card:Vaporframe Fabricator} during the installation process. Then the Corp plays Restore, reinstalling the same copy of {card:Vaporframe Fabricator} from Archives. Even though it is the same physical card, the reinstalled {card:Vaporframe Fabricator} is a new object, and its "once per turn" ability is available to be used this turn.
    rules:
    - rule: rule_identify_object_after_move
      text: An ability that moves cards can identify the new objects that those cards become and continue to act on them.
      examples:
      - text: The Corp plays {card:Priority Construction}, installing a piece of ice from HQ. That ice is now a new object in the play area, but {card:Priority Construction}'s second instruction can still find it and place advancement counters on it.
  - rule: rule_object_move_location
    text: A card that moves from its location to a hidden or secret location becomes a new object, even if the new location is in the same zone.
    examples:
    - text: |-
        The Corp scores {card:Accelerated Beta Test}, looks at the top 3 cards of R&D, and installs and rezzes a piece of ice from among them. As a chain reaction, the Corp then uses {card:The Foundry: Refining the Process} to search R&D, with the result that the other cards currently being looked at by {card:Accelerated Beta Test} are shuffled along with the rest of R&D. Since the cards were moved to an unknown location in R&D, {card:Accelerated Beta Test} can no longer act on them, so those cards can no longer be looked at and will not be installed or trashed.
    - text: |-
        The top card of R&D in the current game state is an object. So is the 2nd card from the top of R&D, the 3rd card, and so on. If the Corp plays {card:Precognition} and rearranges the top 5 cards of R&D, the Runner will not know which cards correspond to which objects in the previous order, so the cards become new objects under their new order.
  - rule: rule_object_move_known_location
    text: A card or counter that moves to a known location in the same zone is still the same object.
    examples:
    - text: The Runner has chosen a piece of ice with {card:Femme Fatale}, and the Corp uses {card:Thimblerig}'s ability to move that ice to another location. But the ice has not left the play area, so it is still the same object and the Runner can still use {card:Femme Fatale}'s ability to bypass it.
  - rule: rule_object_turn_faceup_facedown
    text: A card that is turned faceup or facedown is still the same object.
    examples:
    - text: The Corp uses {card:Vaporframe Fabricator}, installing a piece of ice at no cost, and then plays Divert Power to derez {card:Vaporframe Fabricator} and rez their newly-installed ice at a discount. The Corp can rez {card:Vaporframe Fabricator} again, but since it is still the same object, its "once per turn" ability cannot be used again this turn.
  - rule: rule_previous_object
    text: When a card or counter becomes a new object, its previous object ceases to exist, but can still be remembered by rules or abilities that refer to past game states.
    examples:
    - text: The Runner plays {card:Bravado}. During the run, a piece of ice that the Runner has already passed is trashed. When the run ends, {card:Bravado}'s ability must determine how many pieces of ice the Runner passed during that run. It does this by reviewing the game history and counting each distinct ice object that the Runner passed. Even though the object corresponding to the trashed ice no longer exists in the present game state, {card:Bravado} can still count it.
    - text: The Runner trashes the top card of R&D while accessing it. The object corresponding to that card in its location on top of R&D ceases to exist, but still counts against the number of cards the Runner can access from R&D during this breach.

- section: sec_host
  text: Host, Hosted and Hosting
  rules:
  - subsection: rule_placed_loaded
    text: Whenever an object is "placed" or "loaded" onto a card, a host relationship is created between those two objects. The object placed on top of a card is {term:hosted} on that card. The card onto which the other object is placed is the {term:host}.
    rules:
    - rule: rule_valid_hosts
      text: Only cards in score areas and the play area can host objects.
  - rule: rule_hosted_installed_state
    text: The state of being hosted is distinct, but not exclusive from, the state of being installed. If an ability instructs a player to host a card from an inactive state without reference to installing it, the hosted card remains inactive.
  - rule: rule_hosted_limit
    text: An object can only be hosted on a single card at any given time.
  - rule: rule_hosting_limit
    text: A card can host any number of other objects, except where explicitly restricted by a card ability.
  - subsection: rule_host_relationship
    text: Any card in an eligible location can act as a host, but a host relationship can only be created or permitted by a card ability.
    rules:
    - rule: rule_host_via_install
      text: If a card has an ability describing the types and/or numbers of cards it can host, but it does not have an ability that directly hosts cards onto itself, then the card is permitted as an eligible installation destination for the types of cards listed, up to the number specified. A host card is chosen as an installation destination during {ref:rule_steps_installing_destination} of the installation process.
      examples:
      - text: |-
          {card:Off-Campus Apartment} has the ability, "{card:Off-Campus Apartment} can host any number of {subtype:connections}." This means that whenever the Runner installs a {subtype:connection} card, they can choose to install that card into the play area hosted on {card:Off-Campus Apartment} or as normal directly into the play area.
    - rule: rule_host_via_ability
      text: If a card has an ability describing cards it can host, but also one or more abilities that can create host relationships onto itself, then it only allows cards to become hosted on it through those abilities. A card cannot be installed directly onto the card through an unrelated install effect.
      examples:
      - text: |-
          {card:Glenn Station} reads, "{card:Glenn Station} can host a single card", but also has a paid ability that hosts a card on itself. Therefore, {card:Glenn Station} only lets the Corp host cards through that paid ability, not through an install action.
    - rule: rule_host_on_ability
      text: If a card has an ability stipulating that it can only be installed hosted onto another card, then during the installation process a player that wishes to install that card must choose a valid destination matching the description provided. If no such destination exists before the installation process begins, the card cannot be installed.
      examples:
      - text: |-
          {card:Egret} states, "Install only on a rezzed piece of ice." The Runner can only install Egret if there is an installed, rezzed piece of ice available before the installation process begins; otherwise, it is illegal for the Runner to install {card:Egret}.
    - rule: rule_condition_counter
      text: Some operations and events convert themselves into condition counters and install themselves hosted onto other cards. An operation or event can never be installed through an install effect; it can only become an installed counter through its conversion ability. See {ref:rule_card_to_counter}.
  - subsection: rule_host_faceup_facedown
    text: Cards can be hosted faceup or facedown.
    rules:
    - rule: rule_hosted_when_installed
      text: Unless otherwise specified, a card that is hosted while it is being installed is hosted onto the destination card in the same faceup or facedown status it would normally be installed in.
    - rule: rule_hosted_when_not_installed
      text: Unless otherwise specified, a card that is hosted without being installed is hosted faceup.
    - rule: rule_hosted_facedown_distinct
      text: Like other facedown installed cards, installed cards hosted facedown are distinct. The order in which they were installed (or turned facedown) is open information.
    - rule: rule_hosted_facedown_groups
      text: Cards hosted facedown without being installed must be kept in distinct groups according to their host. Cards within such a group are not ordered and can be freely arranged by their controller.
  - rule: rule_change_hosted
    text: Once a card is installed, hosted or not, a player cannot change that card's hosted status unless a card ability explicitly directs it to be hosted onto a new card.
  - rule: rule_host_transitivity
    text: Host relationships are not transitive. If card A is hosted on card B, and card B is hosted on card C, card A is not considered to be hosted on card C.
    examples:
    - text: If the Runner installs a {card:Leprechaun} hosted on a {card:Dhegdheer}, programs hosted on {card:Leprechaun} do not have their install costs reduced because they are hosted on {card:Leprechaun} and not on {card:Dhegdheer}.
  - rule: rule_hosted_word_meaning
    text: If an ability on a card refers to a "hosted" card or counter, that ability only references objects hosted on that card.
  - rule: rule_remove_spend_hosted_objects
    text: Hosted objects can be removed or spent from their host without affecting the host.
  - rule: rule_trash_hosted_objects_when_host_trashed
    text: If a host card changes zones, all objects hosted on that card (and all objects hosted on those objects, and so on) are trashed during the next checkpoint. This cannot be prevented. See {ref:sec_checkpoints} for details on checkpoints.
  - rule: rule_condition_counters_can_host
    text: Condition counters are the only type of counter that can host other objects. Hosting on condition counters follows the same rules as hosting on cards.

- section: sec_ownership
  text: Ownership and Control
  rules:
  - subsection: rule_owner
    text: The {term:owner} of a card is the player who provided that card at the start of the game as their identity, part of their deck, or an extra card along with their deck.
    rules:
    - rule: rule_owner_converted_to_counter
      text: A card that is converted into a counter retains its owner.
    - rule: rule_owner_counters
      text: No player owns counters that are not converted cards.
  - subsection: rule_controller_object
    text: The {term:controller of an object} is the player responsible for that object.
    rules:
    - rule: rule_controller_card_play_area
      text: The controller of a card in the play area is the player who installed or placed it there.
    - rule: rule_controller_agenda
      text: The Corp controls each agenda in the Corp's score area. The Runner controls each agenda in the Runner's score area.
    - rule: rule_controller_default_owner
      text: Cards in other zones are controlled by their owner.
    - rule: rule_controller_credits
      text: Each player controls the credits in their credit pool.
    - rule: rule_controller_bad_publicity_tag
      text: The Corp controls each bad publicity counter. The Runner controls each tag counter. However, see {ref:rule_corp_can_pay_tag_costs} and {ref:rule_runner_can_pay_bad_publicity_costs} regarding paying costs that involve tags and bad publicity, respectively.
    - rule: rule_controller_hosted_counter
      text: The controller of a counter hosted on a card is the player who controls the host card.
    - rule: rule_controller_click_core_damage
      text: Click counters and core damage counters are gameplay aids only and have no controller.
  - rule: rule_pay_costs_controlled_objects
    text: A player can only pay costs using objects they control.
  - subsection: rule_controller_ability
    text: The {term:controller of an ability} is the player responsible for that ability. By default, this is the player who controls the ability's source. See also {ref:rule_source}. A player can only use abilities they control.
    rules:
    - rule: rule_controller_agenda_abilities
      text: Unless specifically stated otherwise, abilities on agendas are controlled by the Corp, even for agendas in the Runner's score area.
    - rule: rule_ability_controller_specified
      text: Some abilities state that they can only be used by a specific player. The specified player controls each such ability, even if they do not control its source.
  - subsection: rule_controller_choices
    text: Unless otherwise noted, the controller of an ability carries out its effects and makes any choices required. If a player is specified to perform all or part of an effect, the specified player carries out that part of the effect and makes any choices required instead.
    examples:
    - text: |-
        {card:Rototurret}'s first subroutine reads, "Trash 1 installed program." Since {card:Rototurret} is a Corp card, the Corp chooses which installed program to trash. Conversely, {card:Bulwark}'s first subroutine reads, "The Runner trashes 1 installed program." Since the Runner is specified to be carrying out this effect, they choose which of their installed programs to trash.
    rules:
    - rule: rule_trigger_condition_effect_by_player
      text: Some trigger conditions care about effects performed by a particular player. These conditions are only met when that player is the one to carry out the relevant effect.
      examples:
      - text: |-
          The Corp has a rezzed {card:Hostile Infrastructure}. Apocalypse does not specify who trashes the cards, so the Runner is responsible for the trashing and {card:Hostile Infrastructure} meets its trigger condition.
      - text: |-
          {card:Alice Merchant} states that "the Corp must trash 1 card from HQ", so the Corp carries out this effect even though {card:Alice Merchant} is a Runner card, and therefore {card:Hostile Infrastructure} does not meet its trigger condition.

- section: sec_targets
  text: Targets
  rules:
  - subsection: rule_target
    text: Many abilities require players to choose 1 or more objects or subroutines to affect. Each object and subroutine chosen for an ability is a {term:target} of that ability.
    examples:
    - text: |-
        {card:Top Hat} reads in part, "you may choose 1 of the top 5 cards of R&D and access it." The target of this instruction is the card in R&D the Runner chooses.
    - text: |-
        One of the subroutines on {card:Colossus} reads in part, "Trash 1 installed program and 1 installed resource." The targets of this subroutine are the two cards that will be trashed.
    - text: |-
        {card:Trick of Light} reads, "Choose 1 installed card you can advance. Move up to 2 advancement counters from 1 other card to the chosen card." The targets of this operation are the advancement counters to be moved and the destination card. If 2 tokens are chosen, they must be hosted on the same card.
    - text: |-
        The Runner is encountering a {subtype:barrier} and uses {card:Cleaver} to break subroutines. The targets of {card:Cleaver}'s' interface ability are the 1 or 2 subroutines that it will break.
    rules:
    - rule: rule_searching_does_not_target
      text: Cards found during a search are not considered targets of the instruction that performs the search. Players do not need to announce what card(s) they expect to find before the search actually takes place. See {ref:sec_searching_cards} for rules about searching.
    - rule: rule_object_subroutine_targets
      text: Only objects and subroutines are announced as targets. If an instruction directs a player to choose (or "name") a number, a card type, a subtype, a card name, a server, or one of a specified set of effects, that choice is not made until the instruction resolves.
  - subsection: rule_announce_targets
    text: Immediately before an instruction becomes imminent, the player resolving that instruction must first choose the targets required by that instruction. For each time the instruction requires a player to choose 1 or more objects and/or subroutines, that player {term:announces} appropriate targets. Once players are finished announcing targets for an instruction, the instruction becomes imminent, and players have the opportunity to modify the effects of that instruction with interrupt abilities before it resolves. See {ref:sec_interrupts_replacements}.
    rules:
    - rule: rule_target_indicate
      text: When a player announces a card as a target, they indicate clearly which card is being chosen without changing its facedown/faceup status or location.
    - rule: rule_targets_must_be_valid
      text: The player resolving the instruction can only choose targets that are valid for that instruction. A target is valid for an instruction if it meets any specified requirements of that instruction or can otherwise be acted upon by that instruction.
    - rule: rule_targets_must_be_in_play_area
      text: Unless an instruction explicitly specifies the zone from which an object must be selected as a target, only counters in the play area and installed cards are valid targets for that instruction.
      examples:
      - text: The Corp resolves a subroutine that says "[sub] The Runner trashes 1 program." The Runner must trash 1 of their installed programs and may not trash a program from their grip or stack.
    - rule: rule_multiple_targets
      text: Some effects allow a player to choose multiple cards as targets for a single announcement. {ref:Subsec_quantities_and_sets} contains rules about resolving effects involving sets of cards.
    - rule: rule_distinct_targets
      text: A player may announce the targets for an instruction in any order, but each object or subroutine can only be chosen as a target once for each announcement. If there are not enough valid targets available, then that player chooses as many distinct targets as possible and the remaining targets are not announced.
      examples:
      - text: The Runner accesses an {card:Aggressive Secretary} with three advancement counters on it. The Runner only has two installed programs, so the Corp chooses both of those programs for {card:Aggressive Secretary}. After the programs have been chosen, they are both trashed simultaneously.
    - rule: rule_targeting_only_once
      text: Targets cannot be chosen for an instruction at any other time. Even if the game state changes due to interrupt abilities while the instruction is imminent, unannounced targets remain unchosen.
  - rule: rule_targets_gone
    text: |-
      At the time an instruction resolves, if any of its targets either have become invalid or were not announced, as much of that ability resolves as possible without acting on the unannounced or invalid targets, following {ref:rule_if_able,rule_do_as_much_as_you_can} of the Golden Rules. A target can be invalid because the chosen object or subroutine no longer exists or because the target no longer meets other requirements specified by the targeting ability.
  - rule: rule_target_beyond_move
    text: |-
      After the resolution of an instruction that chose a particular target, subsequent instructions of the same ability can continue to act on that target without needing to select it again, even if the ability moves the target or changes its properties. See also {ref:rule_no_memory}.
    examples:
    - text: |-
       {card:Howler}'s ability targets a card in HQ. Its first instruction installs that card, and its second instruction creates a delayed conditional ability that refers to that card in the play area. The latter ability can find and act on the card as long as it is still installed. 

- section: sec_costs
  text: Costs
  rules:
  - subsection: rule_cost
    text: In order to use an ability or apply an effect, a player may be required to pay a cost. A cost can take the form of any card, counter, or other item a player must spend; an effect a player must resolve; or other type of requirement a player must meet. If a player cannot pay the full cost of an action or ability all at once with cards and counters they control, they cannot use the effect associated with that cost.
    rules:
    - rule: rule_cost_no_interrupt
      text: The act of paying a cost cannot be modified or cancelled by optional interrupt abilities.
      examples:
      - text: The Runner can trash {card:Clone Chip} to trigger its paid ability, but cannot use {card:LLDS Energy Regulator} to prevent {card:Clone Chip} from being trashed this way.
    - rule: rule_cost_interrupt_static_mandatory
      text: If a static ability or a mandatory conditional ability interrupt would prevent the steps of paying a cost from being carried out if they were performed as an effect, that cost cannot be paid.
      examples:
      - text: |-
          The Runner cannot pay the additional cost to steal {card:Obokata Protocol} while {card:Guru Davinder} is installed, because the Runner could not currently take 4 damage if instructed to: {card:Guru Davinder}'s first ability would prevent the damage.
      - text: The Runner is playing as {card:Jesminder Sareen} and encounters {card:Funhouse}, without any other tag-related effects resolving earlier in the run. Since {card:Jesminder}'s ability would prevent taking 1 tag, the Runner cannot take 1 tag to pay the nested cost in {card:Funhouse}'s ability. {card:Funhouse} will end the run.
    - rule: rule_cost_restrictions
      text: If triggering an ability or resolving an effect is subject to both costs and other restrictions, the cost cannot be paid unless all such restrictions are met, and cannot be paid in a way that would result in any restriction no longer being met.
      examples:
      - text: The Runner controls {card:Zer0} and {card:Clan Vengeance}, and wants to accumulate more power counters on {card:Clan Vengeance}. {card:Zer0}'s ability has the restriction "Use this ability only once per turn." If the Runner has already used the ability this turn, they cannot suffer additional net damage by attempting (even unsuccessfully) to use the ability again.
      - text: The Corp installs {card:Azef Protocol} in the root of a server with a rezzed {card:SanSan City Grid} and advances {card:Azef Protocol} twice. Since {card:SanSan City Grid} reduces {card:Azef Protocol}'s advancement requirement to 2, the Corp now meets the restriction necessary to score {card:Azef Protocol}, but must also pay its additional cost to score. The Corp cannot trash the {card:SanSan City Grid} to pay this cost, because paying the cost this way would return {card:Azef Protocol}'s advancement requirement to 3, and the restriction to score it would no longer be met.
    - rule: rule_cost_zero
      text: A cost of 0 can still be paid by a player, even though no items are paid. Costs of 0 are not paid automatically. A player pays a cost of 0 by explicitly announcing they are paying it.
      examples:
      - text: |-
          The Runner accesses a {card:Beanstalk Royalties} from R&D and announces that they are using the ability of {card:Freedom Khumalo: Crypto-Anarchist} to trash the {card:Beanstalk Royalties}. Even though the Runner does not remove any virus counters from any cards, they have still paid the cost.
  - subsection: rule_modified_costs
    text: The actual contents of a cost can be dependent on the game state. Abilities can modify their own costs, modify costs of a certain type or that meet certain criteria, or include costs that need to be calculated.
    rules:
    - rule: rule_cost_calculation
      text: If a quantity in a cost is subject to effects modifying its value, determine the final value of that quantity by taking its default value, applying each effect that increases the cost, and then applying each effect that lowers the cost. Finally, if the value determined by this process is less than 0, set the value to 0.
    - rule: rule_cost_quantities
      text: Some abilities calculate a quantity using phrases like "for each", "for every", or "plus". Any time such a calculation appears in a cost, the result of that calculation is determined at the time the cost is to be paid. The result is taken as an aggregate, so that paying the cost is a single instance of whatever was paid. Note that additional costs ({ref:rule_nested_cost}) are not aggregated with other costs. See also {ref:Subsec_quantities_and_sets} for rules about calculated quantities that appear in other contexts.
      examples:
      - text: The Runner approaches a server protected by 3 advanced pieces of ice and with a rezzed {card:Cayambe Grid} in its root. They pay the nested cost in {card:Cayambe Grid}'s ability. This cost is 1 payment of 6[c], not 3 payments of 2[c], so this only meets the trigger condition for 1 instance of {card:GameNET}'s ability.
    - rule: rule_cost_x
      text: Some costs contain the variable X. Before a player pays such a cost, they choose and announce a positive integer or 0 to be the value for X. The chosen value must follow any applicable restrictions.
      examples:
      - text: |-
          {card:Psychographics} is an operation with a play cost of X. It also has the ability, "X must be equal to or less than the number of tags the Runner has." If the Runner has 3 tags, the Corp can choose 0, 1, 2, or 3 as the value for X when they play {card:Psychographics}.
    - rule: rule_cost_x_out_of_context
      text: If an ability needs to know the value of a cost in a context where that cost is not being paid, treat any X that appears in that cost as 0.
    - rule: rule_install_and_rez_reducing_total
      text: An ability that instructs the Corp to install and rez a card can also reduce the "total" cost to do so. This use of "total" indicates that the Corp can divide the modifier between the install cost and the rez cost of the relevant card. When such a modifier applies, the Corp declares a number of credits by which to reduce the install cost and a number of credits by which to reduce the rez cost. This declaration is made at the beginning of {ref:rule_steps_installing_pay_install_cost}, before calculating the value of the install cost, and the numbers declared this way must be nonnegative numbers whose sum is equal to the number of credits specified by the original "total" modifier. The respective costs are then lowered by the declared amounts, following the normal procedure described in {ref:rule_cost_calculation}.
      new:
      examples:
      - text: The Corp uses the ability on {card:Tucana} to install and rez a copy of {card:Logjam} from R&D, paying a total of 3[c] less. They install the {card:Logjam} protecting a server that already has 1 piece of ice protecting it, meaning that without the "total of 3[c] less" modifier, the install cost would be 1[c] and the rez cost would be 6[c]. The Corp applies 1[c] of the discount to the install cost and 2[c] to the rez cost, leaving a final install cost of 0[c] and a final rez cost of 4[c].
        new:
  - subsection: rule_cost_checkpoint
    text: After a player pays a cost, a checkpoint occurs. See {ref:sec_checkpoints}.
    rules:
    - rule: rule_cost_checkpoint_cost_zero
      text: This checkpoint occurs even if the cost being paid is 0.
      new:
  - subsection: rule_types_of_costs
    text: |-
      There are six main types of costs: install costs (found mainly on hardware, programs, and resources, and incurred when installing ice), play costs (found on operations and events), rez costs (found on assets, upgrades, and ice), paid ability trigger costs, additional costs, and nested costs.
    rules:
    - rule: rule_inherent_cost
      text: Install costs, rez costs, and play costs are all costs that are inherent properties of cards. These costs are automatically applied to any ability that performs the corresponding effects (installing, rezzing, or playing) unless that ability stipulates otherwise. See also {ref:sec_printed_cost} (for more about these costs as they appear on cards) and {ref:sec_install_cost}, {ref:rule_inherent_rez_cost} and {ref:rule_playing_play_cost} (for more about paying costs to install, rez, and play cards).
    - rule: rule_inherent_cost_in_ability
      text: The presence of an install cost, rez cost, or play cost does not change the optional or mandatory status of an ability. If an effect directs a player to install, rez, or play a card, they must pay the associated cost if able. If they cannot, the card is not installed, rezzed, or played.
    - rule: rule_inherent_and_additional_cost
      text: If an effect directs a player to install, rez, or play a card, but doing so has an additional cost, the player is not forced to pay the additional cost. If they decline to do so, they do not pay the install, rez, or play cost either, and the card is not installed, rezzed, or played.
    - rule: rule_inherent_cost_aggregates
      text: When a player takes an action that plays or installs one or more cards and has no other effects, the play cost or install cost of each of those cards is considered to have been spent to take that action, even though other steps take place between initiating the action and paying that cost.
      examples:
      - text: |-
          The Corp has {card:Jeeves Model Bioroids} rezzed, and uses the basic action "[Click]: Play an operation." to play {card:Blue Level Clearance}. Both the click spent for the cost of the basic action and the click spent for {card:Blue Level Clearance}'s additional cost count as clicks spent to take the "[Click]: Play an operation." action.
  - subsection: rule_ignoring_costs
    text: Some abilities direct a player to ignore certain costs when performing particular effects.
    rules:
    - rule: rule_ignore_general_cost
      text: If a player is directed to ignore 1 or more of the 6 main types of costs, the specified costs are removed from the total cost that must be paid. Any other costs (usually additional costs) that are not specified to be ignored still apply normally.
    - rule: rule_ignore_credit_cost
      text: If a player is directed to ignore "credit costs", any credits to be paid from any type of cost are removed from the total cost. Any costs that do not consist of credits still apply normally.
    - rule: rule_ignore_all_costs
      text: If a player is directed to ignore "all costs", all elements of the relevant cost are removed, including additional costs, so that the total cost becomes 0.
  - subsection: rule_install_cost
    text: The {term:install cost} of a card must be paid to install that card.
    rules:
    - rule: rule_install_cost_on_card
      text: The install cost of a program, resource, or piece of hardware is listed on the card itself.
    - rule: rule_install_cost_ice
      text: The install cost of a piece of ice is a number of credits equal to the number of pieces of ice already protecting the server that ice will be installed protecting.
    - rule: rule_no_install_cost
      text: There is no cost to install an asset, upgrade, or agenda.
  - rule: rule_play_cost
    text: The {term:play cost} of an operation or event must be paid to play that card. It is listed on the card itself.
  - rule: rule_rez_cost
    text: The {term:rez cost} of an asset, upgrade, or piece of ice must be paid in order to rez that card. It is listed on the card itself.
  - rule: rule_trigger_cost
    text: The {term:trigger cost} of each paid ability is the first part of that ability's text. It is followed by a colon (:) and then the ability's effect. See {ref:sec_paid_abilities} for more details on paid abilities.
  - subsection: rule_additional_cost
    text: An {term:additional cost} adds something to the regular cost of initiating a particular game effect. A player must pay all additional costs along with any regular costs in order to initiate an effect.
    rules:
    - rule: rule_decline_additional_cost
      text: If a player would be forced to carry out a game effect, but doing so has an additional cost, that player may decline to pay the additional cost, even if they are able to pay it, thus preventing that effect from occurring.
      examples:
      - text: The Runner accesses {card:Obokata Protocol}. Normally the Runner must steal agendas that they access, but because {card:Obokata Protocol} has an additional cost to steal, the Runner can decline to suffer the net damage and not steal the agenda.
    - rule: rule_additonal_cost_simultaenous
      text: A player must pay all additional costs simultaneously with the cost that is being added to, even if multiple cards or abilities are adding separate additional costs. A player cannot pay the original cost or any of the additional costs individually. If they cannot pay for all of the costs at once, then they do not pay any of the costs and the corresponding effects cannot occur.
      examples:
      - text: The Runner accesses {card:Obokata Protocol} while {card:Ben Musashi} and {card:Predictive Algorithm} are both active. The Runner must be able to pay 2 credits and suffer 6 net damage all at once in order to steal the {card:Obokata Protocol}, even though each of the three costs are from different card abilities. After all costs have been paid, abilities that meet their trigger conditions from the paying of any of those costs, such as {card:I've Had Worse} or {card:Order of Sol}, can then resolve as applicable.
    - rule: rule_additional_cost_checkpoint
      text: If an additional cost is required for an effect that does not normally require paying any cost, the additional cost is paid and a checkpoint is resolved before performing the usual procedure to carry out that effect. See also {ref:rule_checkpoint_after_paying_cost}.
      examples:
      - text: The Corp is playing {card:Ob Superheavy Logistics} and initiates scoring {card:Azef Protocol}, which has an additional cost to score of "trash one of your other installed cards." If the Corp trashes a rezzed card, meeting the trigger condition for {card:Ob}'s ability, this ability will resolve following the checkpoint associated with paying the cost. This happens before {card:Azef Protocol} is added to the Corp's score area or any trigger conditions related to scoring an agenda are met.
  - subsection: rule_nested_cost
    text: |-
      A {term:nested cost} is a cost appearing within an ability's instructions that must be paid while the ability is resolving in order for some or all of the rest of the effects of that ability to resolve.
    rules:
    - rule: rule_nested_cost_may
      text: |-
        Nested costs are usually written in the format "[player] may [cost] to [instructions]" or "[player] may [cost]. If [you/they] do, [instructions]." If the indicated player pays the indicated cost, the indicated instructions are resolved. Otherwise, that part of the ability is not resolved.
    - rule: rule_nested_cost_unless
      text: |-
        Nested costs can also be written in the format "[instructions] unless [player] [cost]" or "[player] may [cost]. If [you/they] do not, [instructions]." If the indicated player pays the indicated cost, the indicated instructions are not resolved. Otherwise, that instruction is resolved.
      examples:
      - text: |-
          A subroutine reading "End the run unless the Runner pays 1[c]." contains a nested cost. If the Runner chooses to pay 1[c], the subroutine will not end the run.
    - rule: rule_nested_cost_no_may
      text: An ability that reads "If [you/they] do" or "If [you/they] do not" without a preceding "may" does not indicate a nested cost.
    - rule: rule_nested_cost_otherwise
      text: |-
        Some abilities use the word "otherwise" to indicate that different instructions should be resolved depending on whether a nested cost was paid or not. In an ability with a nested cost of a form described in {ref:rule_nested_cost_may}, treat "otherwise" as an "if [you/they] do not" clause attached to the same cost. Conversely, in an ability with a nested cost of a form described in {ref:rule_nested_cost_unless}, treat "otherwise" as an "if [you/they] do" clause attached to the same cost. Note that "otherwise" can also appear in the context of other types of conditions, and does not by itself indicate a nested cost.

- section: sec_score_scoring_steal
  text: Score, Scoring and Stealing
  rules:
  - subsection: rule_score
    text: The sum of all agenda points on agendas in a player's score area is that player's {term:score}.
    rules:
    - rule: rule_threat_level
      text: The {term:threat level} is equal to the greatest score of any player. The "Threat N" ability flag makes use of the threat level ({ref:rule_threat_flag}).
      examples:
      - text: If the Runner's score is 4 agenda points, and the Corp's score is 3 agenda points, the threat level is 4.
  - rule: rule_game_win
    text: If at any time a player's score is greater than or equal to 7, they win the game at the next checkpoint. See {ref:sec_ending_the_game} regarding winning the game, and {ref:sec_checkpoints} for details about checkpoints.
  - subsection: rule_score_steal
    text: Players add agendas to their score areas by {term:scoring} or {term:stealing} them. The Corp can score an agenda to their score area as an option during certain paid ability windows on their turn. The Runner can steal an agenda to their score area while accessing it.
    rules:
    - rule: rule_advancement_requirement
      text: The {term:advancement requirement} of an agenda restricts when the Corp can score it. The Corp can only score an agenda that has advancement counters on it greater than or equal to its advancement requirement. See {ref:sec_advancing_cards}.
    - rule: rule_not_required_to_score
      text: The Corp is not required to score an agenda immediately upon satisfying its advancement requirement.
    - rule: rule_score_not_an_action
      text: Scoring an agenda does not cost [click] and is not an action. 
    - rule: rule_decline_to_steal
      text: The Runner cannot decline to steal an agenda they access, unless there is an additional cost to steal that agenda and the Runner cannot or does not wish to pay it. {ref:Chpt_access_breach} details accessing, and {ref:rule_additional_cost} details additional costs.
    - rule: rule_add_agenda_to_score_area
      text: If an effect directly adds an agenda to a score area or otherwise moves an agenda from any zone to a score area, that agenda is not considered scored or stolen.
    - rule: rule_added_agendas_not_scored_or_stolen
      text: If an effect causes another card to be added to a score area "as an agenda", the newly converted agenda is not considered scored or stolen. See {ref:rule_add_card_to_score_area}.
  - rule: rule_score_area_faceup
    text: Agendas are always added to the score area faceup, regardless of their previous faceup/facedown status.
  - rule: rule_score_area_uninstalled
    text: If an installed agenda is scored or stolen, it becomes uninstalled. Any advancement counters on the scored or stolen agenda are returned to the bank. See {ref:rule_trash_hosted_objects_when_host_trashed}.
  - rule: rule_agenda_scored
    text: Some agendas and other cards have abilities with a trigger condition related to an agenda being scored. These abilities become pending after the Corp moves the agenda from its current zone to their score area.
  - rule: rule_agenda_stolen
    text: Some agendas and other cards have abilities with a trigger condition related to an agenda being stolen. These abilities become pending after the Runner moves the agenda from its current zone to their score area.
  - rule: rule_advancement_counters_reference
    text: If an ability meets its trigger condition from an agenda being scored or stolen, the agenda's last known number of advancement counters before being scored or stolen is used for any references to the number of advancement counters in the effects of that ability.

- section: sec_advancing_cards
  text: Advancing Cards
  rules:
  - rule: rule_advance
    text: To {term:advance} a card is to place an advancement counter from the bank on it. The Corp typically advances cards with a basic action during their action phase, but card abilities can also advance cards.
  - rule: rule_placing_advancement_counter
    text: Resolving an instruction that directly places an advancement counter onto a card is not the same as advancing a card. Likewise, resolving an instruction that moves an advancement counter from one card to another is not the same as advancing a card.
    examples:
    - text: The Corp plays {card:Mushin-no-Shin}, choosing to install an {card:Oaktown Renovation}. Because the three advancement counters were placed on the card directly, the Corp does not gain any credits from the ability on {card:Oaktown Renovation}.
  - rule: rule_you_can_advance
    text: The Corp can only advance certain installed cards. Agendas can always be advanced. If a card other than an agenda says that it "can be advanced" or that "you can advance" that card, the card can be advanced even while it is unrezzed. There is no limit to the number of times a card can be advanced.
  - rule: rule_advanced_card
    text: An "advanced card" is a card with 1 or more advancement counters hosted on it.

- section: sec_trashing
  text: Trashing
  rules:
  - rule: rule_trashing
    text: |-
      {term:Trashing} is the act of moving an object to its owner's discard pile.
  - rule: rule_access_trash
    text: During access, the Runner has the opportunity to pay the trash cost of the accessed card to trash it. See {ref:rule_basic_trash_ability}.
  - rule: rule_trashed_vs_discarded
    text: A trashed card is not considered to have been discarded, and vice versa. Cards that prevent a card from being trashed cannot prevent a card from being discarded.
  - subsection: rule_trash_symbol
    text: The symbol [trash] represents trashing the object it appears on. It is used as a cost for certain abilities.
    examples:
    - text: |-
        {card:Fall Guy}'s last ability reads "[trash]: Gain 2[c]." The cost to trigger this ability is to trash {card:Fall Guy}.
    rules:
    - rule: rule_trash_ability
      text: |-
        "A [trash] ability" refers to a paid ability that includes [trash] in its trigger cost.
    - rule: rule_use_trash_ability
      text: Some paid abilities have multiple options for their trigger cost, separated by "or". A player triggering such an ability only "used a [trash] ability" if the actual cost that was paid includes [trash].

- section: sec_memory
  text: Memory
  rules:
  - rule: rule_memory_unit
    text: A {term:memory unit} ([MU]) is a space available to the Runner to install programs.
  - rule: rule_memory_limit
    text: The Runner's {term:memory limit} is the {n}total amount of [MU]{/n} the Runner has. If the Runner's identity card does not specify a starting memory limit, their starting memory limit is 4[MU]. {n}An ability of the form "+N[MU]" increases the Runner's memory limit by N[MU].{/n}
    examples:
    - text: The Runner {n}is playing an identity with a starting memory limit of 4[MU]. They have an installed copy of {card:T400 Memory Diamond},{/n} which has the ability "+1[MU]". The Runner can therefore have up to 5[MU] worth of programs installed.
      new:
    rules:
    - rule: rule_memory_unused_mu
      text: The Runner's {term:unused} [MU] is their memory limit minus the total memory cost of all of their installed programs. The Runner's [MU] is {term:full} if they have 0 unused [MU].
      new:
  - rule: rule_memory_cost
    text: Programs have a {term:memory cost} that is continually applied against the memory limit. {ref:Rule_program_memory_cost} details how the Runner's installed programs are constrained by the memory limit.

- section: sec_card_visibility
  text: Card Visibility
  rules:
  - subsection: rule_faceup_facedown
    text: Cards in the play area and other public zones are either {term:faceup} or {term:facedown}. Faceup cards are freely visible to all players. Facedown cards are oriented so that the face containing the card's information is not visible.
    rules:
    - rule: rule_hidden_secret_faceup_facedown
      text: Cards in hidden or secret zones (see {ref:sec_game_zones_general}) are neither faceup nor facedown.
    - rule: rule_hosted_cards_treated_as_group
      text: Some effects host multiple cards on an object at the same time or set aside multiple cards at the same time. Facedown cards that enter a zone at the same time by the same effect are treated as a group. See {ref:rule_host_faceup_facedown} and {ref:rule_facedown_set_aside_distinct_groups}, respectively.
  - subsection: rule_look
    text: When a player {term:looks} at a card, they are allowed to see the front face of the card even if the front face would not normally be visible to them. A player should look at that card without showing it to the other player if it is not normally visible to that player.
    rules:
    - rule: rule_look_at_controlled_facedown
      text: A player may look at facedown cards they control at any time.
  - rule: rule_reveal
    text: To {term:reveal} a card is to show its front face to all players, then return it to its previous state.
  - rule: rule_expose
    text: Some abilities instruct the Runner to {term:expose} one or more cards. To expose a card is to reveal it, except that only installed, unrezzed cards can be exposed.
  - rule: rule_look_reveal_expose_access_distinct
    text: Effects that instruct a player to look at, reveal, expose, or access a card are not the same, even if they would be performed similarly at times. See {ref:chpt_access_breach} for more information on accessing.
  - rule: rule_remain_visible
    text: If a resolving ability directs one or both players to look at or reveal a card or set of cards, each such card remains visible to the relevant player(s) until the entire ability is finished resolving or the card moves to a different location.
  - rule: rule_ambush_text
    text: The ability "While the Runner is accessing this [type] in R&D, they must reveal it." is a static ability that applies for the entire duration of the access. This is also the case for cards with the older wording, "If [this card] is accessed from R&D, the Runner must reveal it."
